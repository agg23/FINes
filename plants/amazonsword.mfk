import graphics_buffer

import plants/plants

// Make sure to update text arrays
const byte AMAZONSWORD_PRICE = 15

inline void draw_amazonsword(PlantSize size, byte x, pointer.byte data, bool write_attr, byte custom_bottom_y) {
  byte i
  byte j
  byte x_offset
  word height_from_floor
  byte height

  x_offset = x + plant_min_x

  if (size == large) {
    height = 6
  } else if (height == medium) {
    height = 4
  } else {
    height = 4
  }

  height_from_floor = plant_tile_height_from_floor(height, custom_bottom_y)

  if (size == large) {
    for i,0,until,3 {
      for j,0,until,6 {
        // First row is custom
        if (j == 0) {
          if (i == 0) {
            data[0] = $D7
          } else {
            data[j] = 0
          }
        } else {
          // D8 - 3 since first row is custom
          data[j] = $D5 + i + j * 3
        }
      }

      add_buffered_write(ppu_nametable0 + height_from_floor + x_offset + i, true, data, height, false)
    }
  } else if (size == medium) {
    for i,0,until,3 {
      for j,0,until,4 {
        data[j] = $CD + i + j * 3
      }

      add_buffered_write(ppu_nametable0 + height_from_floor + x_offset + i, true, data, height, false)
    }
  } else {
    for i,0,until,3 {
      for j,0,until,4 {
        if (j == 0) {
          if (i == 0) {
            data[0] = $C3
          } else {
            data[j] = 0
          }
        } else {
          // C4 - 3 since first row is custom
          data[j] = $C1 + i + j * 3
        }
      }

      add_buffered_write(ppu_nametable0 + height_from_floor + x_offset + i, true, data, height, false)
    }
  }

  if (write_attr) {
    build_and_write_plant_attribute_table(x_offset, anubias, 3, custom_bottom_y)
  }
}

const array(byte) amazonsword_name_text = [
  "A. Sword" ascii
]

const array(byte) amazonsword_price_text = [
  "15" ascii
]
