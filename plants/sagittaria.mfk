import graphics_buffer

import plants/plants

// Make sure to update text arrays
const byte SAGITTARIA_PRICE = 55

// TODO: Size is unused
inline void draw_sagittaria(PlantSize size, byte x, pointer.byte data, bool write_attr, byte custom_bottom_y) {
  byte i
  byte j
  byte x_offset
  word height_from_floor

  if (size == medium) {
    draw_sagittaria_medium(x, data, write_attr, custom_bottom_y)
    return
  }

  x_offset = x + plant_min_x

  height_from_floor = plant_tile_height_from_floor(6, custom_bottom_y)

  for i,0,until,3 {
    for j,0,until,6 {
      data[j] = $E7 + i + j * 3
    }

    add_buffered_write(ppu_nametable0 + height_from_floor + x_offset + i, true, data, 6, false)
  }

  if (write_attr) {
    build_and_write_plant_attribute_table(x_offset, sagittaria, 3, custom_bottom_y)
  }
}

inline void draw_sagittaria_medium(byte x, pointer.byte data, bool write_attr, byte custom_bottom_y) {
  // Medium sagittaria is handled uniquely, as it's only for the shop
  byte x_offset
  word height_from_floor

  x_offset = x + plant_min_x

  height_from_floor = plant_tile_height_from_floor(4, custom_bottom_y)

  data[0] = $18
  data[1] = $1B
  data[2] = $98
  data[3] = $9B
  add_buffered_write(ppu_nametable0 + height_from_floor + x_offset, true, data, 4, false)

  data[0] = $19
  data[1] = $1C
  data[2] = $99
  data[3] = $9C
  add_buffered_write(ppu_nametable0 + height_from_floor + x_offset + 1, true, data, 4, false)

  data[0] = $1A
  data[1] = $1D
  data[2] = $9A
  data[3] = $9D
  add_buffered_write(ppu_nametable0 + height_from_floor + x_offset + 2, true, data, 4, false)

  if (write_attr) {
    build_and_write_plant_attribute_table(x_offset, sagittaria, 3, custom_bottom_y)
  }
}

const array(byte) sagittaria_name_text = [
  "S.taria" ascii
]

const array(byte) sagittaria_price_text = [
  "55" ascii
]
