import player

import movement_lib
import object_lib

enum EnemyType {
    chaser,
    stationary_shooter
}

const byte MAX_ENEMIES = 19

array(byte) enemies_is_alive [MAX_ENEMIES]
array(word) enemies_x [MAX_ENEMIES]
array(word) enemies_y [MAX_ENEMIES]
array(word) enemies_velocity_x [MAX_ENEMIES]
array(word) enemies_velocity_y [MAX_ENEMIES]
array(EnemyType) enemies_type [MAX_ENEMIES]

byte current_enemy_count = 0

const byte MAX_ENEMY_VELOCITY_PER_TICK = $80
const byte MAX_ENEMY_VELOCITY = 1
const byte DECAY_ENEMY_VELOCITY_PER_TICK = $40

void spawn_enemy(EnemyType type) {
    byte i
    i = find_open_object_array_position(enemies_is_alive.addr, 0, 1, current_enemy_count, MAX_ENEMIES)

    if i != -1 {
        enemies_is_alive[i] = 1
        enemies_x[i] = 50
        enemies_y[i] = 50
        enemies_velocity_x[i] = 0
        enemies_velocity_y[i] = 0
        enemies_type[i] = type

        current_enemy_count += 1
    }
}

void enemy_tick() {
    byte i
    word x
    word y
    word velocity_x
    word velocity_y
    for i,0,until,MAX_ENEMIES {
        if enemies_is_alive[i] == 0 {
            continue
        }

        x = enemies_x[i]
        y = enemies_y[i]
        velocity_x = enemies_velocity_x[i]
        velocity_y = enemies_velocity_y[i]
        
        if player.x > x {
            add_16_const(velocity_x.hi, velocity_x.lo, MAX_ENEMY_VELOCITY_PER_TICK)
        } else if player.x < x {
            sub_16_const(velocity_x.hi, velocity_x.lo, MAX_ENEMY_VELOCITY_PER_TICK)
        }

        if player.y > y {
            add_16_const(velocity_y.hi, velocity_y.lo, MAX_ENEMY_VELOCITY_PER_TICK)
        } else if player.y < y {
            sub_16_const(velocity_y.hi, velocity_y.lo, MAX_ENEMY_VELOCITY_PER_TICK)
        }

        cap_velocity(velocity_x.hi, velocity_x.lo, MAX_ENEMY_VELOCITY)
        cap_velocity(velocity_y.hi, velocity_y.lo, MAX_ENEMY_VELOCITY)

        enemies_x[i] = x + velocity_x.hi
        enemies_y[i] = y + velocity_y.hi

        if not(collide_player_projectiles(i)) {
            // Collision did not occur
            decay_velocity(velocity_x.hi, velocity_x.lo, DECAY_ENEMY_VELOCITY_PER_TICK)
            decay_velocity(velocity_y.hi, velocity_y.lo, DECAY_ENEMY_VELOCITY_PER_TICK)

            enemies_velocity_x[i] = velocity_x
            enemies_velocity_y[i] = velocity_y
        }
    }
}

inline void despawn_enemy(byte i) {
    enemies_is_alive[i] = 0
    current_enemy_count -= 1
}
