import tank/state

void draw_square_tank() {
  byte i
  byte j
  
  read_ppu_status()
  ppu_set_addr(ppu_nametable0)
  for i,0,until,128 {
    ppu_write_data($15)
  }

  // First row
  ppu_write_data($15)
  ppu_write_data($15)
  ppu_write_data($2)
  for j,0,until,26 {
    ppu_write_data($3)
  }
  ppu_write_data($4)
  ppu_write_data($15)
  ppu_write_data($15)

  // Second row
  ppu_write_data($15)
  ppu_write_data($15)
  ppu_write_data($5)
  for j,0,until,26 {
    ppu_write_data($6)
  }
  ppu_write_data($7)
  ppu_write_data($15)
  ppu_write_data($15)

  // Third row (water line)
  ppu_write_data($15)
  ppu_write_data($15)
  ppu_write_data($8)
  for j,0,until,13 {
    ppu_write_data($13)
    ppu_write_data($14)
  }
  ppu_write_data($9)
  ppu_write_data($15)
  ppu_write_data($15)

  for i,0,until,20 {
    ppu_write_data($15)
    ppu_write_data($15)
    ppu_write_data($A)
    for j,0,until,26 {
      ppu_write_data(0)
    }
    ppu_write_data($B)
    ppu_write_data($15)
    ppu_write_data($15)
  }

  // Second last row
  ppu_write_data($15)
  ppu_write_data($15)
  ppu_write_data($C)
  ppu_write_data($D)
  for j,0,until,24 {
    ppu_write_data(0)
  }
  ppu_write_data($E)
  ppu_write_data($F)
  ppu_write_data($15)
  ppu_write_data($15)

  // Last row
  ppu_write_data($15)
  ppu_write_data($15)
  ppu_write_data($10)

  for j,0,until,26 {
    ppu_write_data($11)
  }

  ppu_write_data($12)
  ppu_write_data($15)
  ppu_write_data($15)

  for i,0,until,32 {
    ppu_write_data($15)
  }

  // Attributes
  read_ppu_status()
  // Second row
  ppu_set_addr(ppu_attrtable0 + 8)
  for i,0,until,8 * 6 {
    ppu_write_data($FF)
  }

  for i,0,until,8 {
    ppu_write_data(0)
  }
}

const Tank export_square_tank = Tank(draw_square_tank.pointer, $20, $D0, $32, $D8)
