import tank/state

void draw_square_tank() {
  byte i
  byte j
  
  read_ppu_status()
  ppu_set_addr(ppu_nametable0)
  for i,0,until,128 {
    ppu_write_data($4)
  }

  for i,0,until,25 {
    if (i == 0) {
      read_ppu_status()
      ppu_set_addr(ppu_nametable0 + $80)
      ppu_write_data($4)
      ppu_write_data($1)
      for j,0,until,28 {
        ppu_write_data($4)
      }
      ppu_write_data($1)
      ppu_write_data($4)
    } else if (i == 24) {
      ppu_write_data($4)
      ppu_write_data($2)

      for j,0,until,28 {
        ppu_write_data($1)
      }

      ppu_write_data($3)
      ppu_write_data($4)
    } else {
      ppu_write_data($4)
      ppu_write_data($1)
      for j,0,until,28 {
        ppu_write_data($0)
      }
      ppu_write_data($1)
      ppu_write_data($4)
    }
  }

  for i,0,until,32 {
    ppu_write_data($4)
  }

  // Attributes
  read_ppu_status()
  // Second row
  ppu_set_addr(ppu_attrtable0 + 8)
  for i,0,until,8 {
    ppu_write_data(0)
  }

  for i,0,until,5 {
    ppu_write_data(%01000100)
    for j,0,until,6 {
      ppu_write_data(%01010101)
    }
    ppu_write_data(%00010001)
  }
}

const Tank export_square_tank = Tank(draw_square_tank.pointer, $10, $E0, $42, $D8)
