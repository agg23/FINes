void draw_details_panel(bool draw_start_select) {
  byte i
  byte j

  // Clear NT
  read_ppu_status()
  ppu_set_addr(ppu_nametable0)
  // Draw black top
  for i,0,until,2 {
    for j,0,until,32 {
      ppu_write_data($10)
    }
  }

  // Draw first row
  ppu_write_data($10)
  ppu_write_data($10)
  ppu_write_data($79)
  for j,0,until,26 {
    ppu_write_data($6B)
  }
  ppu_write_data($7A)
  ppu_write_data($10)
  ppu_write_data($10)

  // Draw second row
  ppu_write_data($10)
  ppu_write_data($7B)
  ppu_write_data($70)
  for j,0,until,26 {
    ppu_write_data(0)
  }
  ppu_write_data($71)
  ppu_write_data($7C)
  ppu_write_data($10)

  // Draw standard rows
  for i,0,until,22 {
    ppu_write_data($10)
    ppu_write_data($81)
    for j,0,until,28 {
      ppu_write_data(0)
    }
    ppu_write_data($82)
    ppu_write_data($10)
  }

  // Draw second bottom row
  ppu_write_data($10)
  ppu_write_data($7D)
  ppu_write_data($74)
  for j,0,until,26 {
    ppu_write_data(0)
  }
  ppu_write_data($75)
  ppu_write_data($7E)
  ppu_write_data($10)

  // Draw bottom row
  ppu_write_data($10)
  ppu_write_data($10)
  ppu_write_data($7F)
  for j,0,until,26 {
    ppu_write_data($6C)
  }
  ppu_write_data($80)
  ppu_write_data($10)
  ppu_write_data($10)

  // Draw black bottom
  for i,0,until,2 {
    for j,0,until,32 {
      ppu_write_data($10)
    }
  }

  // Clear AT
  ppu_set_addr(ppu_attrtable0)
  for i,0,until,64 {
    ppu_write_data(0)
  }

  // HR line
  ppu_set_addr(ppu_nametable0 + 6 * 32 + 2)
  for i,0,until,28 {
    ppu_write_data($83)
  }

  draw_back_button(4, 24)
  if (draw_start_select) {
    draw_start_select_button(22, 25)
  }
  draw_details_panel_attr()

  set_bank_1()

  load_details_panel_palette()
}

void draw_details_panel_attr() {
  byte i
  byte j

  // First row
  ppu_set_addr(ppu_attrtable0)
  ppu_write_data(0)
  for i,0,until,6 {
    // Top 0, bottom 2
    ppu_write_data(%10100000)
  }
  ppu_write_data(0)

  // Middle rows
  for i,0,until,5 {
    // Left 0, right 2
    ppu_write_data(%10001000)
    for j,0,until,6 {
      // All 2
      ppu_write_data(%10101010)
    }
    // Left 2, right 0
    ppu_write_data(%00100010)
  }

  // Bottom row
  ppu_write_data(0)
  for i,0,until,3 {
    // Top 2, bottom 0
    ppu_write_data(%00001010)
  }
  // Write rest 0 for start+select button
  for i,0,until,4 {
    ppu_write_data(0)
  }

  for i,0,until,8 {
    ppu_write_data(0)
  }
}

void draw_back_button(byte x, byte y) {
  word address
  address = ppu_nametable0 + word(y) * 32 + word(x)

  ppu_set_addr(address)
  ppu_write_data($8B)
  ppu_write_data($8C)
  
  ppu_set_addr(address + 32)
  ppu_write_data($8D)
  ppu_write_data($8E)

  draw_text(x - 1, y - 1, back_text.pointer, back_text.length, 0)
}

void draw_start_select_button(byte x, byte y) {
  byte i
  ppu_set_addr(ppu_nametable0 + word(y) * 32 + word(x))

  for i,0,until,7 {
    ppu_write_data($84 + i)
  }
}

void load_details_panel_palette() {
  add_buffered_write(ppu_palette_ram, false, inspect_details_palette.pointer, $20, true)
}
