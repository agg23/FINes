import ui/shared
import ui/shop

import fish/render

inline void render_shop_fish() {
  byte i
  byte j

  byte x
  byte y
  byte mask
  bool direction
  mask = 0
  direction = true

  for i,0,until,SHOP_ROW_COUNT {
    for j,0,until,SHOP_COLUMN_COUNT {
      render_fish_type(shop_fish_tanks[i * 3 + j], 64 + j * 64, 48 + i * 12 * 8, 0, true)
    }
  }
}

inline void render_shop_tank_highlight() {
  byte x_low
  byte x_high
  byte y_low
  byte y_high
  x_low = 32 + current_shop_column * 8 * 8
  y_low = 24 + current_shop_row * 13 * 8
  x_high = x_low + 7 * 8
  y_high = y_low + 11 * 8 - 4

  render_cursor(x_low, x_high, y_low, y_high)
}

inline void render_shop_price_highlight() {
  byte x_low
  byte x_high
  byte y_low
  byte y_high
  x_low = 40 + current_shop_column * 8 * 8 - 4
  y_low = 12 * 8 + current_shop_row * 13 * 8 - 2

  if (shop_price_state != any) {
    y_low += 8
  } 
  
  if (shop_price_state == male) {
    x_high = x_low + 8 - 1
  } else if (shop_price_state == female) {
    x_low += 16
    x_high = x_low + 8 - 1
  } else {
    x_high = x_low + 6 * 8 - 1
  }

  y_high = y_low + 1

  render_cursor(x_low, x_high, y_low, y_high)
}

inline void draw_shop_tank(FishType type, byte x, byte y) {
  word address
  byte i
  byte j

  address = ppu_nametable0 + 32 * word(y) + word(x)

  for i,0,until,5 {
    ppu_set_addr(address)
    for j,0,until,4 {
      ppu_write_data(shop_tank[i * 4 + j])
    }

    address += 32
  }

  draw_fish_name(type, x - 2, y + 6, 8)

  // Any
  draw_text(x - 1, y + 8, any_price_text.pointer, any_price_text.length, 0)
  draw_fish_any_price(type, x + any_price_text.length, y + 8)

  // Sexed
  draw_text(x - 1, y + 9, sexed_price_text.pointer, sexed_price_text.length, 0)
  draw_fish_any_price(type, x + sexed_price_text.length, y + 9)
}

void draw_shop() {
  byte i
  byte j
  ppu_set_addr(ppu_nametable0)

  for i,0,until,30 {
    for j,0,until,32 {
      ppu_write_data(0)
    }
  }

  for i,0,until,SHOP_ROW_COUNT {
    for j,0,until,SHOP_COLUMN_COUNT {
      draw_shop_tank(shop_fish_tanks[i * 3 + j], 6 + j * 8, 4 + i * 12)
    }
  }

  set_bank_1()

  enable_sprite0 = false
}

const array(byte) shop_tank = [
  1, 2, 3, 4,
  5, 6, 7, 8,
  9, 0, 0, 10,
  11, 0, 0, 12,
  13, 14, 14, 15
]

const array(byte) cory_name_text = [
  "Cory" ascii
]

const array(byte) any_price_text = [
  "Any" ascii
]

const array(byte) sexed_price_text = [
  "M/F" ascii
]