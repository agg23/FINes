void draw_shop_fish_screen() {
  byte i
  byte j

  read_ppu_status()
  ppu_set_addr(ppu_nametable0)

  for i,0,until,SHOP_ROW_COUNT {
    for j,0,until,SHOP_COLUMN_COUNT {
      draw_shop_tank(shop_fish_tanks[i * 3 + j], 6 + j * 8, 5 + i * 12)
    }
  }

  draw_text(14, 2, fish_screen_text.pointer, fish_screen_text.length, 0)

  draw_shop_shelving()
}

inline void draw_shop_tank(FishType type, byte x, byte y) {
  word address
  byte i
  byte j

  address = ppu_nametable0 + 32 * word(y) + word(x)

  for i,0,until,5 {
    ppu_set_addr(address)
    for j,0,until,4 {
      ppu_write_data(shop_tank[i * 4 + j])
    }

    address += 32
  }

  draw_fish_name(type, x - 2, y + 6, 8)

  // Any
  draw_text(x - 1, y + 8, any_price_text.pointer, any_price_text.length, 0)
  draw_fish_any_price(type, x + any_price_text.length, y + 8)

  // Sexed
  draw_text(x - 1, y + 9, sexed_price_text.pointer, sexed_price_text.length, 0)
  draw_fish_any_price(type, x + sexed_price_text.length, y + 9)
}

inline void render_shop_fish() {
  byte i
  byte j

  byte x
  byte y
  byte mask
  bool direction
  mask = 0
  direction = true

  for i,0,until,SHOP_ROW_COUNT {
    for j,0,until,SHOP_COLUMN_COUNT {
      render_fish_type(shop_fish_tanks[i * 3 + j], 64 + j * 64, 58 + i * 12 * 8, 0, true)
    }
  }
}

inline void draw_shop_shelving() {
  draw_shop_shelf(2, 10, true)
  draw_shop_shelf(2, 22, false)

  draw_shelf_column(2, 11, 11, true)
  draw_shelf_column(29, 11, 11, false)

  draw_shelf_column(2, 23, 7, true)
  draw_shelf_column(29, 23, 7, false)
}

void draw_shop_shelf(byte x, byte y, bool is_top) {
  byte i
  pointer.byte array_pointer

  if (is_top) {
    array_pointer = shop_top_shelf.pointer
  } else {
    array_pointer = shop_normal_shelf.pointer
  }

  read_ppu_status()
  ppu_set_addr(ppu_nametable0 + word(y) * 32 + word(x))

  for i,0,until,shop_top_shelf.length {
    ppu_write_data(array_pointer[i])
  }
}

void draw_shelf_column(byte x, byte y, byte height, bool is_left) {
  byte i
  byte tile

  if (is_left) {
    tile = $16
  } else {
    tile = $15
  }

  ppu_ctrl = vertical_ppu_ctrl

  read_ppu_status()
  ppu_set_addr(ppu_nametable0 + word(y) * 32 + word(x))

  for i,0,until,height {
    ppu_write_data(tile)
  }
}

const array(byte) shop_tank = [
  1, 2, 3, 4,
  5, 6, 7, 8,
  9, 10, 11, 12,
  13, 0, 0, 14,
  13, 0, 0, 14
]

const array(byte) shop_top_shelf = [
  $F, $13, $13, $13,
  $14, $14, $14, $14,
  $13, $13, $13, $13,
  $14, $14, $14, $14,
  $13, $13, $13, $13,
  $14, $14, $14, $14,
  $13, $13, $13, $10
]

const array(byte) shop_normal_shelf = [
  $11, $13, $13, $13,
  $14, $14, $14, $14,
  $13, $13, $13, $13,
  $14, $14, $14, $14,
  $13, $13, $13, $13,
  $14, $14, $14, $14,
  $13, $13, $13, $12
]

const array(byte) fish_screen_text = [
  "Fish" ascii
]

const array(byte) any_price_text = [
  "Any" ascii
]

const array(byte) sexed_price_text = [
  "M/F" ascii
]
