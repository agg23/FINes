import ui/components/progress_indicator

byte ammonia_level
byte oxygen_level
byte co2_level
byte overall_health

inline void increase_ammonia(byte value) {
  if ($ff - ammonia_level < value) {
    ammonia_level = 255
  } else {
    ammonia_level += value
  }

  build_overall_health()
}

inline void decrease_ammonia(byte value) {
  if (ammonia_level < value) {
    ammonia_level = 0
  } else {
    ammonia_level -= value
  }

  build_overall_health()
}

void draw_overall_health() {
  draw_text(24, 3, short_health_text.pointer, short_health_text.length, 0)
  draw_progress_indicator(26, 3)
}

void render_overall_health() {
  render_progress_indicator(26, 3, overall_health, false)
}

void build_overall_health() {
  byte ammonia_diff
  byte oxygen_diff
  byte co2_diff

  if (ammonia_level <= $10) {
    ammonia_diff = 0
  } else {
    // Proximity to "best" value
    ammonia_diff = ammonia_level - $10
  }

  oxygen_diff = oxygen_level - $80

  if (oxygen_diff & $80 != 0) {
    oxygen_diff = $FF - oxygen_diff
  }

  if (co2_level <= $10) {
    co2_diff = 0
  } else {
    co2_diff = co2_level - $10
  }

  overall_health = $FF - (ammonia_diff + (oxygen_diff >> 2) + co2_level)
}

const array(byte) short_health_text = [
  "H:" ascii
]